[TOC]


# TODO


  * 把重点放在密度聚类上，这个或许是一个非常有潜力的方法。








# 什么是密度聚类？


密度聚类的特点是不依赖于距离，而是依赖于密度，只要某个样本点周边的密度大于某阈值，那么就将这个样本添加到最近的簇中。

嗯，这个感觉普适性就高了，基于距离的算法只能发现 “类圆形” (凸) 的聚类，而密度聚类就比较强了，它可以发现任意形状的聚类，而且它对噪声数据不敏感。

但是，它也有缺点：计算密度单元的计算复杂度大，需要建立空间索引来降低计算量。**到底怎么做？**




# 有那些密度聚类的方法？


比较重要的两种密度聚类的方法：




  * DBSCAN

  * 密度最大值算法


还有一些，比如：OPTICS，DENCLUE，WaveCluster。**这些都没讲**






# DBSCAN 算法


### DBSCAN 介绍


DBSCAN (Density-Based Spatial Clustering ofApplications with Noise)

一个比较有代表性的基于密度的聚类算法。与划分和层次聚类方法不同，它将簇定义为密度相连的点的最大集合，能够把具有足够高密度的区域划分为簇，并可在有“噪声”的数据中发现任意形状的聚类。

它认为密度相连的点的最大集合就是一个簇。

可以对有噪声的数据进行DBSCAN。


### DBSCAN 算法的若干概念




![](http://106.15.37.116/wp-content/uploads/2018/03/img_5abd16c6d0420.png)




![](http://106.15.37.116/wp-content/uploads/2018/03/img_5abd16d440786.png)




![](http://106.15.37.116/wp-content/uploads/2018/03/img_5abd16d90a3d5.png)




![](http://106.15.37.116/wp-content/uploads/2018/03/img_5abd16ddd87e2.png)


怎么从核心对象寻找所有密度可达的所有对象？深度或者广度优先搜索可以吗？是可以的，但是使用并查集最好，并查集就是为了这个而生的，它做的就是生成多少个连通分量。**什么是并查集？**


### DBSCAN算法流程



![](http://106.15.37.116/wp-content/uploads/2018/04/img_5ae19a19e41df.png)






  * 如果一个点p的ε-邻域包含多于m个对象，则创建一个p作为核心对象的新簇；

  * 寻找并合并核心对象直接密度可达的对象；

  * 没有新点可以更新簇时，算法结束。




### 总结


![](http://106.15.37.116/wp-content/uploads/2018/04/img_5ae19a2f99ba4.png)




  * 每个簇至少包含一个核心对象；

  * 非核心对象可以是簇的一部分，构成了簇的边缘(edge)；

  * 包含过少对象的簇被认为是噪声。


注意：对于![](http://106.15.37.116/wp-content/uploads/2018/04/img_5ae19aa5e0215.png) 这种数据，密度聚类只能聚出来一类，它不方便找到边。

好，再介绍另外一种密度聚类的方法：


## 密度最大值聚类




### 密度最大值聚类介绍




![](http://106.15.37.116/wp-content/uploads/2018/03/img_5abd1742ab965.png)


什么叫每个点的邻居数为所有点的1%~2%？


### 高局部密度点距离




![](http://106.15.37.116/wp-content/uploads/2018/03/img_5abd1751c49a4.png)


** 没有特别理解这个式子。 **


### 簇中心的识别




![](http://106.15.37.116/wp-content/uploads/2018/03/img_5abd175ee56cf.png)





### 密度最大值聚类过程




![](http://106.15.37.116/wp-content/uploads/2018/03/img_5abda19c0981f.png)





### 边界和噪声的重认识




![](http://106.15.37.116/wp-content/uploads/2018/03/img_5abda1c201a2d.png)


EM算法 高斯混合模型仍然会提到这个。


![](http://106.15.37.116/wp-content/uploads/2018/03/img_5abda1d814a55.png)


嗯 关键是确定了类簇的中心 很厉害


### 不同数据下密度最大值聚类的效果




![](http://106.15.37.116/wp-content/uploads/2018/03/img_5abda1f54e765.png)



























# REF

1. 七月在线 机器学习

