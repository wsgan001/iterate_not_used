---
author: evo
comments: true
date: 2018-04-29 03:24:26+00:00
layout: post
link: http://106.15.37.116/2018/04/29/abstract-features/
slug: abstract-features
title: 特征抽象
wordpress_id: 4530
categories:
- 随想与反思
tags:
- '@todo'
- '@want_to_know'
---

<!-- more -->

[mathjax]


# REF






  1. 《机器学习 实践应用》




# TODO






  * **对于文本、音频、图像 到底怎么处理？要单独拿出来说**


  * **视频文件呢？带字幕的视频呢？**




# MOTIVE






  * aaa





* * *





# 什么是特征抽象？


将源数据抽象成算法可以理解的数据。

举个例子：

首先思考一下，什么样的数据是算法可以理解的？目前机器学习算法主要是通过对一些数据进行矩阵运算或者概率运算来得出一个结论。也就是：算法的入参应该是一组可以表达数据某类特性的数字。

那么，我们希望数据是这样的：


![mark](http://pacdb2bfr.bkt.clouddn.com/blog/image/180728/19kdcdl3ia.png?imageslim)

但是呢，实际中采集到的数据可能是这样的：


![mark](http://pacdb2bfr.bkt.clouddn.com/blog/image/180728/GlA1ibB7H6.png?imageslim)

那么，如何使用这种非结构化的数据进行分析呢？如何从这些数据中挑选特征？

实际上，这种抽象的过程没有现成的公式或者工具，需要根据用户的主观判断来实现，。

即：




  * 需要进行大量的选灌灌工作来积累经验


  * 需要对特征抽象的数据业务场景足够了解




OK，那么到底该如何处理这种特征？从看似不可量化的数据中抽象出特征？下面我们挨个说一下：




# 时间戳


数据来自系统日志的时候，时间抽经常会有，而且，实践序列是对结果影响很大的一部分特征。比如，要预测一个用户下一周的购买行为，最好选择用户今年的数据来训练，而不是去年的，对于这种强时效性的事件，事件还是很重要的。那么如何处理呢？

如下面这个数据集：


![mark](http://pacdb2bfr.bkt.clouddn.com/blog/image/180728/DC3bd73bm7.png?imageslim)

时间戳 Time 的这种 “年-月-日” 格式的数据。可以选定一天作为基准，然后取具体日期字段中的数据与这一天的差值。比如，可以取2016-9-13 为基准，那么数据可以显示为：


![mark](http://pacdb2bfr.bkt.clouddn.com/blog/image/180728/dd4b6F7DFA.png?imageslim)




# 二值类问题


比如这样一组数据：


![mark](http://pacdb2bfr.bkt.clouddn.com/blog/image/180728/5bgffHeiAk.png?imageslim)

看似由非结构化的文本构成，但是可以稍微调整一下将数据量化。比如，对于性别和是否购买两项，都是二值型的，因此可以抽象成：


![mark](http://pacdb2bfr.bkt.clouddn.com/blog/image/180728/5daLi044Ej.png?imageslim)

注：对于单个字段那个是0，那个是1，不用纠结，因为只要可以通过量纲数值表示字段的具体含义就可以了。


# 多值


上面的二值的还是比较好处理的，但是当字段的数据出现很多值的时候，就稍微麻烦了些。多值的字段数据分为两种i给你：一种是有序的，一种是无序的。


## 多值有序


有序数据指的是数据可以按照程度来分层，如：


![mark](http://pacdb2bfr.bkt.clouddn.com/blog/image/180728/H5d5CiJ9bJ.png?imageslim)

这里需要对Type进行特征抽象，看到里面这种疼痛程度，感觉可以对应成 0，1，2。嗯。

那么那么那个值对应0，哪个值对应1呢？

如果这些文本值表示的意义是可以按照验证程度排序的化，我们可以吧字符对象按照从轻到重，或者从重到轻两种方式与数值一一对应。比如：轻、中、重 可以对应成0，1，2 或者2，1，0。都可以，只要是按照程度来排序就行。


## 多值无序


这种就比较麻烦了，但那时嫩，只能被迫对数据的信息熵进行一定程度的阉割或者采用One-hot 编码的方法。

比如下面这个数据集：职业与收入


![mark](http://pacdb2bfr.bkt.clouddn.com/blog/image/180728/CiLDa3IJGm.png?imageslim)

这里，我们要对Occupation进行抽象，那么，多值有序的方法就行不通了，因为没有办法分辨这些职业之间的程度关系。那么怎么办呢？


### 信息阉割


如果实在没有更好的办法的情况下，只能牺牲一下这个字段的信息熵，比如如果我们是要预测教育行业相关的情况的话，我们可以吧老师设定为1，把其它的都设定为0，那么这个特征表示的意义就是：职业是否是老师，对收入的影响。**但是这样感觉丢掉了太多的信息了吧？有了One-hot这种之后，信息阉割这种还会被用到吗？什么场景下？**


### One-hot 编码


其实呢，我们还有一种方法来解决多值无序的我呢提，而且，还不用阉割信息。这就是One-hot编码。

对于上面这个Occupation的例子：我们可以把：老师、厨师、司机、运动员，分别编码成：[1,0,0,0]、[0,1,0,0]、[0,0,1,0]、[0,0,0,1]。

注意：这里我们做的是：相当于把 Occupation 这一个特征根据它里面 Occupation 的种类拆成了4个特征，比如说这些特征的名字是：occ_teacher、occ_cook、occ_driver、occ_athlete 。那么，对于每一个样本来说，如果他是老师，那么他的这四个特征的值分别是 1，0，0，0。 以此类推，这就是上面这4组值的意思。

OK，理解了之后，我们来对这种形式总结一下：One-hot 编码的原则是通过唯一数值表示每个字符数据在其特征列重的未知属性来实现特征编码。**确认一下这个定义是不是准确，感觉有点不清楚。**

嗯，感觉这个One-hot 编码还是很厉害的，虽然编出的特征里面的值很稀疏，但是是可以带到算法重进行运算的。


# 文本类型


**这里需要重新总结下，最好放到NLP那里。**

之前提到的一些特征抽象，都是建立在半结构化数据的基础上的，二半结构化数据指的是数据已经存储到了矩阵结构的数据库重，但是实际的值是字符类型的。

那么，假如，我们的数据本来就是一段文本，那么怎么进行抽象特征呢？比如，数据是“小王真聪明”，怎么做呢？

实际上，还是由很多方式的，比如，我们可以把文本先分词，比如分成：“小王/真/聪明” ，然后就可以按照词语出现的未知和次数来提取特征，也可以按照每个词的词性来提取特征。如果是多个文本的集合，还可以根据TF-IDF来提取特征。**？不清楚**

当然，最简单的特征增还是词的长度，比如前面这句话在特征首相后可以表示成表：


![mark](http://pacdb2bfr.bkt.clouddn.com/blog/image/180728/deidF3e74a.png?imageslim)




# 图像或者语音数据


**需要补充**

思路大体是：首先，将图像或者语音转化成矩阵。**音频怎么转化成矩阵的？语音怎么提取特征？**

以图像为例：按照像素点切割的话，每个像素点可以表示成一个数值，特征的生成也可以通过深度学习的自编码等方法来实现。**要好好总结下。对所有的方法总结一下。什么是自编码？**




# 视频文件


**需补充**
