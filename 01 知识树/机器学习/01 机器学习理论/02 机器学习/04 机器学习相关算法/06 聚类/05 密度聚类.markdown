





密度聚类

密度聚类亦称 “基于密度的聚类”(density-based clustering)，此类算法假 设聚类结构能通过样本分布的紧密程度确定。通常情形下，密度聚类算法从样本密度的角度来考察样本之间的可连接性，并基于可连接样本不断扩展聚类簇以获得最终的聚类结果.

DBSCAN 是一种著名的密度聚类算法，它基于一组“邻域”(neighborhood)参数($\epsilon$, MinPts)来刻画样本分布的紧密程度.给定数据集 $D=\{x_1,x_2,\cdots ,x_m\}$ ，定义下面这几个概念：


- $\epsilon$-邻域：对 $x_j\in D$ ,其$\epsilon$-邻域包含样本集D中与$x_j$ 的距离不大于$\epsilon$ 的样本，即 $N_{\epsilon}(x_j)=\{x_i\in D|dist(x_i,x_j)\leq \epsilon\}$ 。


- 核心对象(core object):若 $x_j$ 的 $\epsilon$-邻域至少包含 MinPts 个样本，即 $|N_{\epsilon}(x_j)|\geq MinPts$ ，则 $x_j$ 是一个核心对象；
- 密度直达(directly density-reachable):若 $x_j$ 位于 $x_i$ 的 $\epsilon$-邻域中，且 $x_i$ 是核心对象，则称 $x_j$ 由 $x_i$ 密度直达；

- 密度可达(density-reachable):对 $x_i$ 与 $x_j$ ，若存在样本序列 $p_1,p_2,\ldots ,p_n$ ，其中 $p_1=x_i$,$p_n=x_j$ 且 $p_{i+1}$ 由 $p_i$ 仍密度直达，则称 $x_j$ 由 $x_i$ 密度可达；

- 密度相连(density-connected):对 $x_i$ 与 $x_j$ ,若存在 $x_k$ 使得 $x_i$ 与 $x_j$ 均由 $x_k$ 密度可达，则称 $x_i$ 与 $x_j$ 密度相连.

图9.8给出了上述概念的直观显示.

![mark](http://pacdb2bfr.bkt.clouddn.com/blog/image/180629/GHI38dc7e7.png?imageslim)


基于这些概念，DBSCAN将“簇”定义为：由密度可达关系导出的最大的密度相连样本集合.形式化地说，给定邻域参数($\epsilon$ ，MinPts),簇 $C\subseteq D$ 是满足以下性质的非空样本子集：

![mark](http://pacdb2bfr.bkt.clouddn.com/blog/image/180629/iHmGE6G6La.png?imageslim)

那么，如何从数据集I?中找出满足以上性质的聚类簇呢？实际上，若 x 为核心对象，由 x 密度可达的所有样本组成的集合记为 $X=\{X'\in D|x'由 x 密度可达\}$ ，则不难证明 X 即为满足连接性与最大性的簇.

于是，DBSCAN算法先任选数据集中的一个核心对象为“种子”(seed)， 再由此出发确定相应的聚类簇，算法描述如图9.9所示
- 在第1~7行中，算法先根据给定的邻域参数($\epsilon$, MinPts)找出所有核心对象;
- 然后在第10~24行中, 以任一核心对象为出发点，找出由其密度可达的样本生成聚类簇，直到所有核心对象均被访问过为止.

![mark](http://pacdb2bfr.bkt.clouddn.com/blog/image/180629/3FFafeJfC0.png?imageslim)

以表9.1的西瓜数据集 4.0 为例，假定邻域参数($\epsilon$, MinPts)设置为$\epsilon=0.11$，$MinPts = 5$ . DBSCAN算法先找出各样本的$\epsilon$-邻域并确定核心对象集合 $\Omega=\{x_3, x_5, x_6, x_8, x_9,x_{13},x_{14},x_{18},x_{19},x_{24},x_{25},x_{28},x_{29}\}$。然后，从 $\Omega$ 中 随机选取一个核心对象作为种子，找出由它密度可达的所有样本，这就构成了第一个聚类簇.不失一般性，假定核心对象 $x_8$ 被选中作为种子，则 DBSCAN 生成的第一个聚类簇为

![mark](http://pacdb2bfr.bkt.clouddn.com/blog/image/180629/I9j2GAHCk7.png?imageslim)

然后，DBSCAN 将 $C_1$ 中包含的核心对象从 $\Omega$ 中去除：$\Omega=\Omega\\C_1=\{x_3,x_5,x_9,x_{13},x_{14},x_{24},x_{25},x_{28},x_{29}\}$ 。再从更新后的集合 $\Omega$ 中随机选取一个 核心对象作为种子来生成下一个聚类簇.上述过程不断重复，直至 $\Omega$ 为空.图 9.10显示出DBSCAN先后生成聚类簇的情况.

![mark](http://pacdb2bfr.bkt.clouddn.com/blog/image/180629/Dl8iB4jEHE.png?imageslim)

 $C_1$ 之后生成的聚类簇为

![mark](http://pacdb2bfr.bkt.clouddn.com/blog/image/180629/imcDlBfJc5.png?imageslim)



# REF
1. 《机器学习》周志华
