# 基础

[tabby title="基础程序设计"]

[su_tabs vertical="yes"]

[su_tab title="Python" disabled="no" anchor="" url="" target="blank" class="a"]


# Python 版本之间的区别






  1. [Python2.x与3​​.x版本区别](http://106.15.37.116/2018/05/03/python2-x%e4%b8%8e3%e2%80%8b%e2%80%8b-x%e7%89%88%e6%9c%ac%e5%8c%ba%e5%88%ab/)


    1. [python 2与3的区别](http://106.15.37.116/2018/03/06/python-differences-between-2-and-3/)







# Python 安装及环境管理






  1. [Python 环境搭建](http://106.15.37.116/2018/05/03/python-%e7%8e%af%e5%a2%83%e6%90%ad%e5%bb%ba/)


  2. [Python pip 包管理](http://106.15.37.116/2018/05/03/python-pip/)


    1. [pip 到底怎么用？](http://106.15.37.116/2018/03/06/how-to-use-pip-finally/)





  3. [Python virtualenv 独立Python环境管理](http://106.15.37.116/2018/05/03/python-virtualenv/)


  4. [Python fabric 服务器管理和应用发布](http://106.15.37.116/2018/05/03/python-fabric/)




# Python IDE






  1. [Python 解释器](http://106.15.37.116/2018/05/03/python-interpreter/)   虽然不属于IDE，但是放在这里


  2. [Python Pycharm](http://106.15.37.116/2018/05/03/python-ide/)


    1. [Pycharm 常用的快捷键](http://106.15.37.116/2018/02/25/pycharm_shortcut_key/)





  3. [Python SublimeText](http://106.15.37.116/2018/05/03/python-sublimetext/)




# Python 语言






  1. [Python 简介](http://106.15.37.116/2018/05/03/python-%e7%ae%80%e4%bb%8b/)


  2. Python 基础


    1.


[Python 基础语法](http://106.15.37.116/2018/05/03/python-%e5%9f%ba%e7%a1%80%e8%af%ad%e6%b3%95/)



    2.


__[Python 变量类型](http://106.15.37.116/2018/05/03/python-%e5%8f%98%e9%87%8f%e7%b1%bb%e5%9e%8b/)



    3.


__[Python 运算符](http://106.15.37.116/2018/05/03/python-%e8%bf%90%e7%ae%97%e7%ac%a6/)




      1. [python 位运算](http://106.15.37.116/2018/03/06/python-bit-operation/)








  3. Python 流程控制


    1.


[Python 条件语句](http://106.15.37.116/2018/05/03/python-%e6%9d%a1%e4%bb%b6%e8%af%ad%e5%8f%a5/)



    2.


[Python 循环语句](http://106.15.37.116/2018/05/03/python-%e5%be%aa%e7%8e%af%e8%af%ad%e5%8f%a5/)






  4. Python 数据结构


    1.


[Python 数字](http://106.15.37.116/2018/05/03/python-%e6%95%b0%e5%ad%97/)



    2. [python bytes](http://106.15.37.116/2018/03/06/python-bytes/)


    3.


__[Python 字符串](http://106.15.37.116/2018/05/03/python-%e5%ad%97%e7%ac%a6%e4%b8%b2/)




      1. [python中的字符串](http://106.15.37.116/2018/03/19/string-in-python/)


      2. [python 三引号字符串的换行](http://106.15.37.116/2018/03/06/python-three-comma-newline/)





    4.


__[Python 列表(Lists)](http://106.15.37.116/2018/05/03/python-%e5%88%97%e8%a1%a8lists/)




      1. [python中的list](http://106.15.37.116/2018/03/19/python-list/)


      2. [python enumerate](http://106.15.37.116/2018/03/23/python-enumerate/)


      3. [python [[0,0,0]] * 3 的问题](http://106.15.37.116/2018/03/20/python-000-3-problem/)





    5.


[Python 元组](http://106.15.37.116/2018/05/03/python-%e5%85%83%e7%bb%84/)



    6. __[Python 字典(Dictionary)](http://106.15.37.116/2018/05/03/python-%e5%ad%97%e5%85%b8dictionary/)


    7. [python中的dict](http://106.15.37.116/2018/03/20/python-dict/)


    8. [python中的set](http://106.15.37.116/2018/03/20/python-set/)





  5. [Python 函数](http://106.15.37.116/2018/05/03/python-%e5%87%bd%e6%95%b0/)


    1. [python函数的参数](http://106.15.37.116/2018/03/19/python-arg/)


    2. [python中的偏函数](http://106.15.37.116/2018/03/22/python-partial-function/)


    3. [python函数作为参数](http://106.15.37.116/2018/03/19/python-function-as-arg/)


    4. [python 函数式编程与lambda表达式](http://106.15.37.116/2018/03/22/python-lambda/)


    5. [python中的推导式](http://106.15.37.116/2018/03/20/python-comprehensions/)





  6. [Python 面向对象](http://106.15.37.116/2018/05/03/python-%e9%9d%a2%e5%90%91%e5%af%b9%e8%b1%a1/)


    1. [python中的类](http://106.15.37.116/2018/03/20/python-class/)


    2. [python生成器与yield](http://106.15.37.116/2018/03/23/python-generator-yield/)


    3. [python中的枚举](http://106.15.37.116/2018/03/22/python-enum/)


    4. [python描述器](http://106.15.37.116/2018/03/22/python-descr/)


    5. [python中的property](http://106.15.37.116/2018/03/22/python%e4%b8%ad%e7%9a%84property/)


    6. [python 特殊方法与类的定制](http://106.15.37.116/2018/03/22/python-sepcial-func-and-custom-class/)


    7. [python中的装饰器](http://106.15.37.116/2018/03/22/python-decorator/)


    8. [python中的__xx__形式的属性和方法](http://106.15.37.116/2018/03/20/python-__xx__/)


    9. [python 可迭代，生成器，迭代器](http://106.15.37.116/2018/03/20/python-iterable-iterator/)





  7. [Python 异常处理](http://106.15.37.116/2018/05/03/python-%e5%bc%82%e5%b8%b8%e5%a4%84%e7%90%86/)


    1. [python异常与错误处理](http://106.15.37.116/2018/03/22/python-exception/)





  8. Python 文件和流


    1. [python中的序列化与反序列化](http://106.15.37.116/2018/03/22/python-pickling-unpickling/)


    2. [python中的file与directory](http://106.15.37.116/2018/03/21/python-file-directory/)


    3. [python中文件的读写](http://106.15.37.116/2018/03/21/python-file-read-write/)


    4. [Python 文件I/O](http://106.15.37.116/2018/05/03/python-%e6%96%87%e4%bb%b6i-o/)__


    5. [Python File(文件) 方法](http://106.15.37.116/2018/05/03/python-file%e6%96%87%e4%bb%b6-%e6%96%b9%e6%b3%95/)





  9. Python 进程与线程


    1. [Python 多线程](http://106.15.37.116/2018/05/03/python-%e5%a4%9a%e7%ba%bf%e7%a8%8b/)


    2. [python并发编程](http://106.15.37.116/2018/03/22/python-threading-multiprocessing/)







  10.


__[Python 模块](http://106.15.37.116/2018/05/03/python-%e6%a8%a1%e5%9d%97/)




    1.


[python中的模块与包](http://106.15.37.116/2018/03/20/python-module-package/)



    2. 如何添加自己的模块？怎么把模块作为标准库使用？


    3. 类似可以通过pip安装的模块是怎么创建的？





  11. Python 测试


    1. [python单元测试](http://106.15.37.116/2018/03/22/python-unit-test/)





  12. 扩展Python


  13. Python 程序打包


  14.  常用Python模块


    1. [python os模块](http://106.15.37.116/2018/03/21/python-os/)


    2. [python中获取对象的信息](http://106.15.37.116/2018/03/19/type-get-information/)


    3. [python中怎么测量程序运行的时间？](http://106.15.37.116/2018/03/19/how-to-measure-running-time-in-python/)


    4.


[Python 日期和时间](http://106.15.37.116/2018/05/03/python-%e6%97%a5%e6%9c%9f%e5%92%8c%e6%97%b6%e9%97%b4/)




      1. [python中的time和datetime](http://106.15.37.116/2018/03/23/python-time-datetime/)





    5.


__[Python 正则表达式](http://106.15.37.116/2018/05/03/python%e6%ad%a3%e5%88%99%e8%a1%a8%e8%be%be%e5%bc%8f/)




      1. [python中的正则表达式](http://106.15.37.116/2018/03/23/python-re/)





    6. [Python XML解析](http://106.15.37.116/2018/05/03/python-xml%e8%a7%a3%e6%9e%90/)


    7. [Python JSON](http://106.15.37.116/2018/05/03/python-json/)





  15. [python元类与元编程](http://106.15.37.116/2018/03/22/python-metaclass/)





# Python 中需要强调的问题






  1. [Python 中文编码](http://106.15.37.116/2018/05/03/python-%e4%b8%ad%e6%96%87%e7%bc%96%e7%a0%81/)


    1. [python 的中文支持](http://106.15.37.116/2018/03/06/python-chinese-support/)


    2. [python 中文路径怎么办？](http://106.15.37.116/2018/05/06/python-chinese-path/)


    3. [python 中文内容怎么办？](http://106.15.37.116/2018/05/06/python-chinese-content/)





  2. Python 浮点数算法：争议和限制


  3. [python [[0,0,0]] * 3 的问题](http://106.15.37.116/2018/03/20/python-000-3-problem/)


  4.



# Python 科学计算






  1. [Matplotlib](http://106.15.37.116/2018/03/24/matplotlib/)


  2. SciPy   Sklearn ?


  3. [NumPy](http://106.15.37.116/2018/03/23/numpy/)


  4. [Pandas](http://106.15.37.116/2018/03/24/pandas/)




# Python 爬虫






  1. BeautifulSoup


  2. Selenium




# Python GUI






  1. PyQT


  2. [python GUI编程(Tkinter)](https://www.w3cschool.cn/python/python-gui-tkinter.html)




# Python 网络编程






  1.


[Python CGI编程](https://www.w3cschool.cn/python/python-cgi.html)



  2.


__[Python 网络编程](http://106.15.37.116/2018/05/03/python-%e7%bd%91%e7%bb%9c%e7%bc%96%e7%a8%8b/)



  3.


__[Python使用SMTP发送邮件](http://106.15.37.116/2018/05/03/python%e4%bd%bf%e7%94%a8smtp%e5%8f%91%e9%80%81%e9%82%ae%e4%bb%b6/)




    1. [使用 python 发邮件](http://106.15.37.116/2018/03/23/python-send-email/)







# Python Web框架






  1. Django


    1. [本网站开源喽~~基于Django，Bootstrap](https://vmaig.com/article/vmaig_blog.html)


    2. [博客源码更新至我的github](http://www.wangqingbaidu.cn/article/untitled1460536273.html)


    3. https://github.com/wangqingbaidu/wangqingbaidu.cn







  1. Flask


  2. web2py




# Python 数据库操作






  1. [python操作mysql数据库](http://106.15.37.116/2018/05/03/python%e6%93%8d%e4%bd%9cmysql%e6%95%b0%e6%8d%ae%e5%ba%93/)


  2. MySQLdb




# Python 与自动化测试






  1. [什么是自动化测试？怎么写？](http://106.15.37.116/2018/03/06/how-to-write-automatic-test-with-python/)




# Python 其它常用类库






  1. [pygame](http://106.15.37.116/2018/03/23/pygame/)


  2. PIL




# Python 编程规范






  1. [python 风格指南](http://106.15.37.116/2018/05/15/python-style-guide/) 以此为准，是google出的，还没整理


  2. [python中的命名规范](http://106.15.37.116/2018/03/20/python-name-instructions/)









# 需要补充的：





# 需要消化的：






  1. [深入 Python 3](https://dipyzh.bitbucket.io/)  这本书是要好好总结下的，这个是稍微深入的一些


  2. [python3-cookbook](http://python3-cookbook.readthedocs.io/zh_CN/latest/index.html#)  这个要好好总结下，比深入Python3 还要深入些 都是解决实际问题的。


  3. [Python 3.7.0a2 documentation](http://python.readthedocs.io/en/latest/) 官方文档 内容全面


  4. [Python tutorial](http://www.pythondoc.com/pythontutorial3/index.html#) 这其实只是一个入门手册，很多东西都没提，


  5. [Python 类库资源](http://106.15.37.116/2018/05/03/python-%E7%B1%BB%E5%BA%93%E8%B5%84%E6%BA%90/#1wxpython)  Python 的类库还是很多的，将常用的重点总结。


[/su_tab]

[su_tab title=" C++ " disabled="no" anchor="" url="" target="blank" class=""]


# C++ 运行环境安装






  1. [C++ 环境设置](http://106.15.37.116/2018/05/02/cpp-environmental-settings/)




# C++ IDE






  1. VS




# C++ 基础教程






  1. [C++ 简介](http://106.15.37.116/2018/05/02/cpp-introduction/)


  2.

  3. 基础


    1. [C++ 基本语法](http://106.15.37.116/2018/05/02/cpp-basic-grammar/)


    2. [C++ 注释](http://106.15.37.116/2018/05/02/cpp-comment/)


    3. [C++ 数据类型](http://106.15.37.116/2018/05/02/cpp-data-type/)


    4. [C++ 变量类型](http://106.15.37.116/2018/05/02/cpp-variable-type/)


    5. [C++ 变量作用域](http://106.15.37.116/2018/05/02/cpp-variable-scope/)


    6. [C++ 常量](http://106.15.37.116/2018/05/02/cpp-constant/)


    7. [C++ 修饰符类型](http://106.15.37.116/2018/05/02/cpp-dec/)


    8. [C++ 存储类](http://106.15.37.116/2018/05/02/cpp-storage-class/)


    9. [C++ 运算符](http://106.15.37.116/2018/05/02/cpp-operator/)





  4. 流程控制


    1. [C++ 循环](http://106.15.37.116/2018/05/02/cpp-for-while/)


    2. [C++ 判断](http://106.15.37.116/2018/05/02/cpp-if-else/)





  5. 数据类型


    1. [C++ 数字](http://106.15.37.116/2018/05/02/cpp-num/)


    2. [C++ 数组](http://106.15.37.116/2018/05/02/cpp-list/)


    3. [C++ 字符串](http://106.15.37.116/2018/05/02/cpp-string/)





  6. [C++ 函数](http://106.15.37.116/2018/05/02/cpp-function/)


  7. 指针与引用


    1. [C++ 指针](http://106.15.37.116/2018/05/02/cpp-point/)


    2. [C++ 引用](http://106.15.37.116/2018/05/02/cpp-reference/)





  8. [C++ 日期 & 时间](http://106.15.37.116/2018/05/02/cpp-datetime/)


  9. [C++ 基本的输入输出](http://106.15.37.116/2018/05/02/cpp-cin-cout/)


  10. [C++ 数据结构](http://106.15.37.116/2018/05/02/cpp-struct/)


  11. C++ 面向对象


    1. [C++ 类 & 对象](http://106.15.37.116/2018/05/02/cpp-class/)


    2. [C++ 继承](http://106.15.37.116/2018/05/02/cpp-inherit/)


    3. [C++ 重载运算符和重载函数](http://106.15.37.116/2018/05/02/cpp-overloaded-operators-and-functions/)


    4. [C++ 多态](http://106.15.37.116/2018/05/02/cpp-polymorphism/)


    5. [C++ 数据抽象](http://106.15.37.116/2018/05/02/cpp-data-abstraction/)


    6. [C++ 数据封装](http://106.15.37.116/2018/05/02/cpp-data-package/)


    7. [C++ 接口（抽象类）](http://106.15.37.116/2018/05/02/cpp-interface/)







# C++ 高级教程






  1. [C++ 文件和流](http://106.15.37.116/2018/05/02/cpp-file-stream/)


  2. [C++ 异常处理](http://106.15.37.116/2018/05/02/cpp-exception/)


  3. [C++ 动态内存](http://106.15.37.116/2018/05/02/cpp-dynamic-memory/)


  4. [C++ 命名空间](http://106.15.37.116/2018/05/02/cpp-namespace/)


  5. [C++ 模板](http://106.15.37.116/2018/05/02/cpp-template/)


  6. [C++ 预处理器](http://106.15.37.116/2018/05/02/cpp-preprocessor/)


  7. [C++ 信号处理](http://106.15.37.116/2018/05/02/cpp-signal/)


  8. [C++ 多线程](http://106.15.37.116/2018/05/02/cpp-thread/)


  9. [C++ Web 编程](http://106.15.37.116/2018/05/02/cpp-web/)




# C++ 常用类库






  1. [C++ 标准库](http://106.15.37.116/2018/05/02/cpp-standard-library/)


    1. [C++ STL](http://106.15.37.116/2018/05/02/cpp-stl/)





  2. boost 准标准库


  3. fmt


  4. json


  5. spdlog




# C++ 编程规范






  1. [C++ 风格指南](http://106.15.37.116/2018/05/15/cpp-style-guide/) google出的，还没整理




# C++ 项目组织结构






  1. [C++ 项目组织结构](http://106.15.37.116/2018/05/15/cpp-project-organization-structure/)  还没有整理，很多问题都想知道





# 需要补充的：





# 需要消化的：






  1. [C++ 参考手册](http://zh.cppreference.com/w/cpp)  非常好，优先从这里总结，无论是结构还是内容都非常好 ，而且全面


  2. Effective C++/STL




[/su_tab]

[su_tab title=" R " disabled="no" anchor="" url="" target="blank" class=""]

aa

[/su_tab]

[su_tab title=" Java " disabled="no" anchor="" url="" target="blank" class=""]

aa

[/su_tab]

[su_tab title=" C" disabled="no" anchor="" url="" target="blank" class=""]

aa

[/su_tab]

[su_tab title=" Scala" disabled="no" anchor="" url="" target="blank" class=""]

aa

[/su_tab]

[su_tab title=" SQL" disabled="no" anchor="" url="" target="blank" class=""]


# SQL 语言




##  基础教程






  1.


__[SQL 简介](http://106.15.37.116/2018/05/04/sql-%e7%ae%80%e4%bb%8b/)



  2.


__[SQL 语法](http://106.15.37.116/2018/05/04/sql-%e8%af%ad%e6%b3%95/)



  3.


__[SQL 选择](http://106.15.37.116/2018/05/04/sql-select%ef%bc%88%e9%80%89%e6%8b%a9%ef%bc%89-%e8%af%ad%e6%b3%95/)



  4.


__[SQL 选择不同](http://106.15.37.116/2018/05/04/sql-select-distinct%ef%bc%88%e9%80%89%e6%8b%a9%e4%b8%8d%e5%90%8c%ef%bc%89-%e8%af%ad%e6%b3%95/)



  5.


__[SQL 查询子句](http://106.15.37.116/2018/05/04/sql-where-clause%ef%bc%88%e6%9f%a5%e8%af%a2%e5%ad%90%e5%8f%a5%ef%bc%89/)



  6.


__[SQL 与，或不是](http://106.15.37.116/2018/05/04/sql-and-or-and-not%ef%bc%88%e4%b8%8e%ef%bc%8c%e6%88%96%e4%b8%8d%e6%98%af%e8%bf%90%e7%ae%97%e7%ac%a6%ef%bc%89/)



  7.


__[SQL 按关键字排序](http://106.15.37.116/2018/05/04/sql-order-by-keyword%ef%bc%88%e6%8c%89%e5%85%b3%e9%94%ae%e5%ad%97%e6%8e%92%e5%ba%8f%ef%bc%89/)



  8.


__[SQL 在表中插入](http://106.15.37.116/2018/05/04/sql-insert-into-%e8%af%ad%e5%8f%a5%ef%bc%88%e5%9c%a8%e8%a1%a8%e4%b8%ad%e6%8f%92%e5%85%a5%ef%bc%89/)



  9.


__[SQL 空值](http://106.15.37.116/2018/05/04/sql-null-values%ef%bc%88%e7%a9%ba%e5%80%bc%ef%bc%89/)



  10.


__[SQL 更新](http://106.15.37.116/2018/05/04/sql-update-%e8%af%ad%e5%8f%a5%ef%bc%88%e6%9b%b4%e6%96%b0%e8%a1%a8%e4%b8%ad%e7%9a%84%e8%ae%b0%e5%bd%95%ef%bc%89/)



  11.


__[SQL 删除](http://106.15.37.116/2018/05/04/sql-delete-%e8%af%ad%e5%8f%a5%ef%bc%88%e5%88%a0%e9%99%a4%e8%a1%a8%e4%b8%ad%e7%9a%84%e8%ae%b0%e5%bd%95%ef%bc%89/)





##  高级教程




#





# 需要补充的：





# 需要消化的：






  * [SQL教程](https://www.w3cschool.cn/sql/) 只看了基础教程的，高级的还没有加进来，需要补充。


[/su_tab]

[su_tab title=" 算法" disabled="no" anchor="" url="" target="blank" class=""]


# 算法






  1. [几道机智的题目](http://106.15.37.116/2018/05/02/witty-questions/)


  2. [链表](http://106.15.37.116/2018/05/02/linked-list/)


  3. [栈](http://106.15.37.116/2018/05/02/stack/)


  4. [队列](http://106.15.37.116/2018/04/03/queue/)


  5. [字符串](http://106.15.37.116/2018/04/04/algorithm-string/)


  6. [数组](http://106.15.37.116/2018/04/04/algorithm-array/)


  7. [树](http://106.15.37.116/2018/04/04/algorithm-tree/)


  8. [图](http://106.15.37.116/2018/04/04/algorithm-graph/)


  9. [排序查找](http://106.15.37.116/2018/04/05/algorithm-sort-and-search/)


  10. [贪心法和动态规划](http://106.15.37.116/2018/04/05/algorithms-greedy-and-dynamic-programming/)


  11. [概率组合数学](http://106.15.37.116/2018/04/05/algorithm-probability-combination-math/)


  12. [海量数据处理](http://106.15.37.116/2018/04/05/algorithm-mass-data-processing/)


  13. [面试精讲](http://106.15.37.116/2018/04/05/%e7%ae%97%e6%b3%95%ef%bc%9a%e9%9d%a2%e8%af%95%e7%b2%be%e8%ae%b2/)







#




# 需要补充的知识：


一些算法的基础知识    比如什么是大 O 符号的时间和空间复杂性，这与算法和排序问题完美的配对，

应该包括：

数据结构，排序算法，递归，时间/空间复杂度分析，模式和极端案例识别等。真正理解所写的每一行代码带来的后果。

通常会提出一个蛮力的解决方案，然后试着修改这个解决方案。并且讨论权衡不同的解决方案。



要掌握所有的排序算法，因为时间和空间的复杂性有可能破坏你想要解决的算法的最佳解决方案。

将重要的算法相关的文章所到这里，便于以后不断填充和迭代。


# 需要消化的资源：


[/su_tab]

[su_tab title="软件工程" disabled="no" anchor="" url="" target="blank" class=""]


# 设计模式


[/su_tab]

[su_tab title=" 算法" disabled="no" anchor="" url="" target="blank" class=""]

aa

[/su_tab]

[/su_tabs]

[tabby title="基础工具使用"]

[su_tabs vertical="yes"]

[su_tab title="代码管理工具" disabled="no" anchor="" url="" target="blank" class="a"]


# Git






  1.


[Git 教程](http://106.15.37.116/2018/05/04/git-%e6%95%99%e7%a8%8b/)



  2.


__[Git 安装配置](http://106.15.37.116/2018/05/04/git-%e5%ae%89%e8%a3%85%e9%85%8d%e7%bd%ae/)



  3.


__[Git 工作流程](http://106.15.37.116/2018/05/04/git-%e5%b7%a5%e4%bd%9c%e6%b5%81%e7%a8%8b/)



  4.


__[Git 工作区、暂存区和版本库](http://106.15.37.116/2018/05/04/git-%e5%b7%a5%e4%bd%9c%e5%8c%ba%e3%80%81%e6%9a%82%e5%ad%98%e5%8c%ba%e5%92%8c%e7%89%88%e6%9c%ac%e5%ba%93/)



  5.


__[Git 创建仓库](http://106.15.37.116/2018/05/04/git-%e5%88%9b%e5%bb%ba%e4%bb%93%e5%ba%93/)



  6.


__[Git 基本操作](http://106.15.37.116/2018/05/04/git-%e5%9f%ba%e6%9c%ac%e6%93%8d%e4%bd%9c/)



  7.


__[Git 分支管理](http://106.15.37.116/2018/05/04/git-%e5%88%86%e6%94%af%e7%ae%a1%e7%90%86/)



  8.


__[Git 查看提交历史](http://106.15.37.116/2018/05/04/git-%e6%9f%a5%e7%9c%8b%e6%8f%90%e4%ba%a4%e5%8e%86%e5%8f%b2/)



  9.


__[Git 标签](http://106.15.37.116/2018/05/04/git-%e6%a0%87%e7%ad%be/)



  10.


__[Git 远程仓库](http://106.15.37.116/2018/05/04/git-%e8%bf%9c%e7%a8%8b%e4%bb%93%e5%ba%93/)



  11.


__[Git 服务器搭建](http://106.15.37.116/2018/05/04/git-%e6%9c%8d%e5%8a%a1%e5%99%a8%e6%90%ad%e5%bb%ba/)



  12.


__[Git 常用命令速查表](http://106.15.37.116/2018/05/04/git-%e5%b8%b8%e7%94%a8%e5%91%bd%e4%bb%a4%e9%80%9f%e6%9f%a5%e8%a1%a8/)



  13.


__[Git 分支策略](http://106.15.37.116/2018/05/04/git-%e5%88%86%e6%94%af%e7%ad%96%e7%95%a5/)






# SVN




[/su_tab]

[su_tab title="Linux 环境相关工具" disabled="no" anchor="" url="" target="blank" class="a"]


# Linux 系统




## 安装






  1. [Linux 安装](http://106.15.37.116/2018/05/04/linux-%e5%ae%89%e8%a3%85/)




## linux 系统






  1.


[Linux 学习简介](http://106.15.37.116/2018/05/04/linux-%e5%ad%a6%e4%b9%a0%e7%ae%80%e4%bb%8b/)



  2.


__[Linux 系统启动过程](http://106.15.37.116/2018/05/04/linux-%e7%b3%bb%e7%bb%9f%e5%90%af%e5%8a%a8%e8%bf%87%e7%a8%8b/)



  3.


__[Linux 系统目录结构](http://106.15.37.116/2018/05/04/linux-%e7%b3%bb%e7%bb%9f%e7%9b%ae%e5%bd%95%e7%bb%93%e6%9e%84/)



  4.


__[Linux 文件基本属性](http://106.15.37.116/2018/05/04/linux-%e6%96%87%e4%bb%b6%e5%9f%ba%e6%9c%ac%e5%b1%9e%e6%80%a7/)



  5.


__[Linux 文件与目录管理](http://106.15.37.116/2018/05/04/linux-%e6%96%87%e4%bb%b6%e4%b8%8e%e7%9b%ae%e5%bd%95%e7%ae%a1%e7%90%86/)



  6.


__[Linux 用户和用户组管理](http://106.15.37.116/2018/05/04/linux-%e7%94%a8%e6%88%b7%e5%92%8c%e7%94%a8%e6%88%b7%e7%bb%84%e7%ae%a1%e7%90%86/)



  7.


__[Linux 磁盘管理](http://106.15.37.116/2018/05/04/linux-%e7%a3%81%e7%9b%98%e7%ae%a1%e7%90%86/)



  8.


__[Linux yum 命令](http://106.15.37.116/2018/05/04/linux-yum/)



  9. [Linux 命令大全](http://106.15.37.116/2018/05/04/linux-%e5%91%bd%e4%bb%a4%e5%a4%a7%e5%85%a8/)




# Vim






  1. [Linux vi/vim](http://106.15.37.116/2018/05/04/vim-vi/)


    1. [vim](http://106.15.37.116/2018/03/31/vim/)  这个要合并到上面去







# Makefile






  1. [Makefile](http://106.15.37.116/2018/05/04/makefile/) 这个还没有总结，需要好好总结下




# gdb






  1. 需补充




# Linux 环境开发 （需修改）






  1. [linux环境 程序构建](http://106.15.37.116/2018/05/04/linux%e7%8e%af%e5%a2%83-%e7%a8%8b%e5%ba%8f%e6%9e%84%e5%bb%ba/)


  2. [linux环境 程序调试](http://106.15.37.116/2018/05/04/linux%e7%8e%af%e5%a2%83-%e7%a8%8b%e5%ba%8f%e8%b0%83%e8%af%95/)


  3. [linux环境 程序性能优化](http://106.15.37.116/2018/05/04/linux%e7%8e%af%e5%a2%83-%e7%a8%8b%e5%ba%8f%e6%80%a7%e8%83%bd%e4%bc%98%e5%8c%96/)




# Shell 脚本






  1.


[Shell 介绍](http://106.15.37.116/2018/05/04/shell-%e4%bb%8b%e7%bb%8d/)



  2.


__[Shell 变量](http://106.15.37.116/2018/05/04/shell-%e5%8f%98%e9%87%8f/)



  3.


__[Shell 传递参数](http://106.15.37.116/2018/05/04/shell-%e4%bc%a0%e9%80%92%e5%8f%82%e6%95%b0/)



  4.


__[Shell 数组](http://106.15.37.116/2018/05/04/shell-%e6%95%b0%e7%bb%84/)



  5.


__[Shell 运算符](http://106.15.37.116/2018/05/04/shell-%e8%bf%90%e7%ae%97%e7%ac%a6/)



  6.


__[Shell echo命令](http://106.15.37.116/2018/05/04/shell-echo%e5%91%bd%e4%bb%a4/)



  7.


__[Shell printf 命令](http://106.15.37.116/2018/05/04/shell-printf-%e5%91%bd%e4%bb%a4/)



  8.


__[Shell test命令](http://106.15.37.116/2018/05/04/shell-test%e5%91%bd%e4%bb%a4/)



  9.


__[Shell 流程控制](http://106.15.37.116/2018/05/04/shell-%e6%b5%81%e7%a8%8b%e6%8e%a7%e5%88%b6/)



  10.


__[Shell 函数](http://106.15.37.116/2018/05/04/shell-%e5%87%bd%e6%95%b0/)



  11.


__[Shell 输入/输出重定向](http://106.15.37.116/2018/05/04/shell-%e8%be%93%e5%85%a5-%e8%be%93%e5%87%ba%e9%87%8d%e5%ae%9a%e5%90%91/)



  12.


__[Shell 文件包含](http://106.15.37.116/2018/05/04/shell-%e6%96%87%e4%bb%b6%e5%8c%85%e5%90%ab/)










# 需要补充的：






  * 上面的linux环境的开发还要重新总结下，毕竟太简单了


  * 而且，怎么将linux盘映射到windows下，然后我好在windows下使用VS进行开发？应该有这么个工具。当然调试和生成的时候还是使用gdb和makefile


  *

  * 在Linux上怎么开发C++程序？


  * Python的包在linux上使用什么进行管理？是pip还是linux的管理器？




# 需要消化的：






  * [Linux Tools Quick Tutorial](http://linuxtools-rst.readthedocs.io/zh_CN/latest/index.html#)  这个里面还是比较中肯的，要补充到上面的linux系统学习里面






[/su_tab]

[su_tab title="软件部署相关工具" disabled="no" anchor="" url="" target="blank" class="a"]


# Docker






  1.


[Docker 安装](http://106.15.37.116/2018/05/05/docker-%e5%ae%89%e8%a3%85/)



  2.


__[Docker 相关概念](http://106.15.37.116/2018/05/05/docker-%e7%9b%b8%e5%85%b3%e6%a6%82%e5%bf%b5/)



  3.


__[Docker 基本命令](http://106.15.37.116/2018/05/05/docker-%e5%9f%ba%e6%9c%ac%e5%91%bd%e4%bb%a4/)



  4.


__[Docker file基本教程](http://106.15.37.116/2018/05/05/docker-file%e5%9f%ba%e6%9c%ac%e6%95%99%e7%a8%8b/)



  5.


__[Docker 的网络配置](http://106.15.37.116/2018/05/05/docker-%e7%9a%84%e7%bd%91%e7%bb%9c%e9%85%8d%e7%bd%ae/)



  6.


__[Docker 的分区挂载和数据卷](http://106.15.37.116/2018/05/05/docker-%e7%9a%84%e5%88%86%e5%8c%ba%e6%8c%82%e8%bd%bd%e5%92%8c%e6%95%b0%e6%8d%ae%e5%8d%b7/)



  7.


__[Docker 的镜像服务器](http://106.15.37.116/2018/05/05/docker-%e7%9a%84%e9%95%9c%e5%83%8f%e6%9c%8d%e5%8a%a1%e5%99%a8/)





##




##




## 需要补充的：





# 需要消化的：






  * [Docker 镜像使用](https://www.w3cschool.cn/docker/docker-image-usage.html)


  * [Docker 网络配置](http://www.oschina.net/translate/docker-network-configuration)


  * [Docker 数据存储 | 单线程  ](http://opjasee.com/2014/06/27/docker-data-storage.html)


  * [docker-registry使用笔记 - 牧码游子 - 博客园](http://www.cnblogs.com/xguo/p/3829329.html)


  *


[Docker的典型应用场景](https://yq.aliyun.com/articles/224668)







[/su_tab]

[su_tab title="GPU 计算相关工具" disabled="no" anchor="" url="" target="blank" class="a"]


# GPU


分布式GPU


## CUDA


[/su_tab]



[su_tab title="硬件模拟相关工具" disabled="no" anchor="" url="" target="blank" class="a"]


# Arduino 基础教程






  1.


[Arduino 介绍](http://106.15.37.116/2018/05/05/arduino-%e4%bb%8b%e7%bb%8d/)



  2.


__[Arduino 板的说明](http://106.15.37.116/2018/05/05/arduino-%e6%9d%bf%e7%9a%84%e8%af%b4%e6%98%8e/)



  3.


__[Arduino 安装](http://106.15.37.116/2018/05/05/arduino-%e5%ae%89%e8%a3%85/)



  4.


__[Arduino 程序结构](http://106.15.37.116/2018/05/05/arduino-%e7%a8%8b%e5%ba%8f%e7%bb%93%e6%9e%84/)



  5.


__[Arduino 数据类型](http://106.15.37.116/2018/05/05/arduino-%e6%95%b0%e6%8d%ae%e7%b1%bb%e5%9e%8b/)



  6.


__[Arduino 变量和常量](http://106.15.37.116/2018/05/05/arduino-%e5%8f%98%e9%87%8f%e5%92%8c%e5%b8%b8%e9%87%8f/)



  7.


__[Arduino 运算符](http://106.15.37.116/2018/05/05/arduino-%e8%bf%90%e7%ae%97%e7%ac%a6/)



  8.


__[Arduino 控制语句](http://106.15.37.116/2018/05/05/arduino-%e6%8e%a7%e5%88%b6%e8%af%ad%e5%8f%a5/)



  9.


__[Arduino 循环](http://106.15.37.116/2018/05/05/arduino-%e5%be%aa%e7%8e%af/)



  10.


__[Arduino 函数](http://106.15.37.116/2018/05/05/arduino-%e5%87%bd%e6%95%b0/)



  11.


__[Arduino 字符串](http://106.15.37.116/2018/05/05/arduino-%e5%ad%97%e7%ac%a6%e4%b8%b2/)



  12.


__[Arduino 字符串对象](http://106.15.37.116/2018/05/05/arduino-%e5%ad%97%e7%ac%a6%e4%b8%b2%e5%af%b9%e8%b1%a1/)



  13.


__[Arduino 时间函数](http://106.15.37.116/2018/05/05/arduino-%e6%97%b6%e9%97%b4%e5%87%bd%e6%95%b0/)



  14.


__[Arduino 数组](http://106.15.37.116/2018/05/05/arduino-%e6%95%b0%e7%bb%84/)








# Arduino 实践






  1. Arduino 键盘、鼠标模拟


  2. Arduino USB、蓝牙信号发送


  3. Arduino 机械臂制作





# 需要补充的：





# 需要消化的：






  * [Arduino 教程](https://www.w3cschool.cn/arduino/) 上面只是这个里面的 Arduino的基础教程，实际上基本是C语言的一些知识，关键的东西还没有总结。后面把C语言总结之后，该合并的合并到C语言里面去，这里只放Arduino相关的。


  * 印象笔记里面还有一些资源要总结进来。


  * 比如3D打印到那里做也要补充进来。因为对应机械臂


  * 要自己动手进行实践。




[/su_tab]

[su_tab title="数据库" disabled="no" anchor="" url="" target="blank" class="a"]


# MYSQL




# Memcached




# MongoDB


[/su_tab]



[su_tab title="大数据相关工具" disabled="no" anchor="" url="" target="blank" class="a"]




# Hadoop




# ZooKeeper




# Spark


spark streaming


# Hive




# Storm





# Kafka


[/su_tab]

[/su_tabs]

[tabby title="基础计算机"]

[su_tabs vertical="yes"]

[su_tab title="基础知识" disabled="no" anchor="" url="" target="blank" class="a"]

aaa

[/su_tab]

[/su_tabs]

[tabby title="基础数学"]

[su_tabs vertical="yes"]

[su_tab title="线性代数" disabled="no" anchor="" url="" target="blank" class="a"]


# 需要补充的：


这些东西都需要系统的学习




  * 线性代数 (Linear Algebra) ：Introduction to Linear Algebra (3rd Ed.)  by Gilbert Strang.


[/su_tab]

[su_tab title="统计" disabled="no" anchor="" url="" target="blank" class="a"]


  * 概率和统计 (Probability and Statistics):


  * 多元统计   Applied Multivariate Statistical Analysis (5th Ed.)  by Richard A. Johnson and Dean W. Wichern


  * 贝叶斯统计和Graphical models。    Introduction to Graphical Models (draft version).  by M. Jordan and C. Bishop.


[/su_tab]

[su_tab title="分析" disabled="no" anchor="" url="" target="blank" class="a"]


  * 分析 (Analysis)：Principles of Mathematical Analysis, by Walter Rudin


  * 接下来就是泛函分析(Functional Analysis)。 Introductory Functional Analysis with Applications, by Erwin Kreyszig.


  * 还有一个重要的学科是测度理论(Measure theory)，


[/su_tab]

[su_tab title="拓扑" disabled="no" anchor="" url="" target="blank" class="a"]


  * 拓扑 (Topology)：Topology (2nd Ed.)  by James Munkres


  * 对于拓扑和分析有一定把握时，方可开始学习流形理论 流形理论 (Manifold theory)：Introduction to Smooth Manifolds.  by John M. Lee


  * 虽然李群论是建基于平滑流形的概念之上，不过，也可能从矩阵出发直接学习李群和李代数——这种方法对于急需使用李群论解决问题的朋友可能更加实用。下面一本书就是这个方向的典范：Lie Groups, Lie Algebras, and Representations: An Elementary Introduction.  by Brian C. Hall




线性代数和微积分会在任何的情况下都会使用，优化一般在最后一步。



[/su_tab]

[/su_tabs]

[tabbyending]
