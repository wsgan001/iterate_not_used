# PB 级数据是多少？

# 缘由：

看书的时候看到了PB，想了解下。


# 转自：




[MB/GB/TB/PB/EB/ZB/YB/NB/DB/CB存储空间都是多大？如何换算？](http://www.cnblogs.com/xjqlove1989/p/3879387.html)




[大数据存储单位介绍(TB、PB、EB、ZB、YB有多大)](http://www.jb51.net/diannaojichu/86526.html)




最小的基本单位是Byte应该没多少人不知道吧，下面先按顺序给出所有单位：

Byte、KB、MB、GB、TB、PB、EB、ZB、YB、DB、NB

我只知道前五个，估计大多数人都知道吧，按照进率1024（2的十次方）计算：




Byte是计算机信息技术用于计量存储容量和传输容量的一种计量单位，1个字节等于8位二进制。目前我们常用计算存储空间的最小单位（其实还有更小的bit，1 Byte=8 bit）。

不过从硬盘或者叫做存储空间来说，我们用到的最小单位是KB（Kilobyte），大小为2的10次方字节，与Byte换算是：1KB=1024Byte

以后的换算基本都是以2的10次方来递增的。

1KB（Kilobyte）=1024B ，即2的10次方字节，读音“千字节”
1MB（Megabyte）=1024KiB，即2的20次方字节，读音“兆字节”
1GB（Gigabyte）=1024MiB，即2的30次方字节，读音“吉字节”
1TB（Terabyte）=1024GiB，即2的40次方字节，读音“太字节”
1PB（Petabyte）=1024TiB，即2的50次方字节，读音“拍字节”
1EB（Exabyte） =1024PiB，即2的60次方字节，读音“艾字节”
1ZB（Zettabyte）=1024EiB，即2的70次方字节，读音“Z字节”
1YB（Yottabyte）=1024ZiB，即2的80次方字节，读音“Y字节”

传说中还有

1NiB（NonaByte）=1024YiB，即2的90次方字节
1DiB（DoggaByte）=1024NiB，即2的100次方字节
1CiB（Corydonbyte ）=1024DiB，即2的110次方字节

注意：网上不少资料都把NB和DB反了。NB不是最大了，比NB还NB的是DB，哈哈！更大的还有CB呢。

大家一定看到icech上面说的并不是标题的MB/GB/TB/PB/EB/ZB/YB，而中间都加了一个i字母，其实这是算法的差异，一般计算方 法存储器厂家和操作系统厂商还是有所差异的，一般操作系统是以上icech介绍的二进制来换算，而储器厂家特别是硬盘厂商多以十进制来计算，所以通过操作 系统来查看硬盘等存储系统的大小是与说明有所差异。为了区分二进制计算出来的和操作系统计算出来的不同，所以在缩写表示尚也有所不同。

二进制计算出来的统一在中间加一个i字母，而十进制计算出来的则不加。

下面就详细列出换算：

十进制的算法：




  * 1 kilobyte [kB] = 1000 (103) byte

  * 1 megabyte [MB] = 1 000 000 (106) byte

  * 1 gigabyte [GB] = 1 000 000 000 (109) byte

  * 1 terabyte [TB] = 1 000 000 000 000 (1012) byte

  * 1 petabyte [PB] = 1 000 000 000 000 000 (1015) byte

  * 1 exabyte [EB] = 1 000 000 000 000 000 000 (1018) byte

  * 1 zettabyte [ZB] = 1 000 000 000 000 000 000 000 (1021) byte

  * 1 yottabyte [YB] = 1 000 000 000 000 000 000 000 000 (1024) byte

  * 1 nonabyte [NB] = 1 000 000 000 000 000 000 000 000 000 (1027) byte

  * 1 doggabyte [DB] = 1 000 000 000 000 000 000 000 000 000 000 (1030) byte

  * 1 emilbyte [EB] = 1 000 000 000 000 000 000 000 000 000 000 000 (1033) byte

  * 1 corydonbyte [CB] = 1 000 000 000 000 000 000 000 000 000 000 000 000 (1036) byte


二进制的算法：


  * 1 kibibyte [KiB] = 1024 (210) byte

  * 1 mebibyte [MiB] = 1 048 576 (220) byte

  * 1 gibibyte [GiB] = 1 073 741 824 (230) byte

  * 1 tebibyte [TiB] = 1 099 511 627 776 (240) byte

  * 1 pebibyte [PiB] = 1 125 899 906 842 624 (250) byte

  * 1 exbibyte [EiB] = 1 152 921 504 606 846 976 (260) byte

  * 1 zebibyte [ZiB] = 1 180 591 620 717 411 303 424 (270) byte

  * 1 yobibyte [YiB] = 1 208 925 819 614 629 174 706 176 (280) byte

  * 1 nobibyte [NiB] = 1 237 940 039 285 380 274 899 124 224 (290) byte

  * 1 dogbibyte [DiB] = 1 267 650 600 228 229 401 496 703 205 376 (2100) byte

  * 后面不算了，可以参加十进制的算法


可以比较出有多大的差异了吧！

光看这些数字估计你没什么感觉，那现在就算点好想象的吧，下面拿NB为例
在现阶段的TB时代，1TB的硬盘的标准重量是670g
1NB＝2的60次方TB＝1152921504606846976TB＝1152921504606846976个1TB硬盘
总重量约为77245740809万吨， 目前运载量为56万吨的 诺克耐维斯号 巨型海轮
也就是说 储存1NB的数据的硬盘要 诺克耐维斯号 最少来回拉 1 379 388 229 次 约14亿次才能将这些数据运到地点，估计1000个诺克耐维斯号都要报销。
如果以上地数据过于庞大，还是找不到感觉，那么给个实际的数据：计算机报上看到荷兰银行的20个数据中心有大约7PB磁盘和超过20PB的磁带存储，而且每年50%~70%存储量的增长，计算一下27PB大约为 40万个80G的硬盘大小。
半导体行业的摩尔定律似乎还不足以形容数据增长的快速性，大数据量的环境下促生技术的变革和进步，Hadoop技术、敏捷商业智能等等随之出现的解决方案似乎有望为大数据问题带来些许曙光。
