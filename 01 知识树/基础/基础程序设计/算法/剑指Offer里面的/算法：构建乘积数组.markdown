---
author: evo
comments: true
date: 2018-05-29 08:05:09+00:00
layout: post
link: http://106.15.37.116/2018/05/29/%e7%ae%97%e6%b3%95%ef%bc%9a%e6%9e%84%e5%bb%ba%e4%b9%98%e7%a7%af%e6%95%b0%e7%bb%84/
slug: '%e7%ae%97%e6%b3%95%ef%bc%9a%e6%9e%84%e5%bb%ba%e4%b9%98%e7%a7%af%e6%95%b0%e7%bb%84'
title: 算法：构建乘积数组
wordpress_id: 6988
categories:
- 基础程序设计
tags:
- ordinary algorithm
---

<!-- more -->

[mathjax]

**注：非原创，所有版权属于原作者，原文已列在 ORIGINAL 中。为了方便个人学习做了整合、修改，仅供个人学习使用。**


# ORIGINAL





 	
  1. 


[CodingInterviews](https://github.com/gatieme/CodingInterviews)







# TODO





 	
  * aaa





* * *





# INTRODUCTION





 	
  * aaa





# 题目




## **题目描述**


给定一个数组 A[0,1,...,n-1]，请构建一个数组B[0,1,...,n-1]，其中B中的元素 B[i]=A[0]A[1]...*A[i-1]A[i+1]...*A[n-1]。

注：不能使用除法。


## **样例输入**


[1, 2, 3, 4, 5]


## **样例输出**


[120, 60, 40, 30, 24]




# 题目解答


这题用代码写出来很清晰，直接看代码：

    
    #include <iostream>
    #include <vector>
    using namespace std;
    
    class Solution {
    public:
        //厉害呀，充分利用之前计算过的值
        vector<int> multiply(const vector<int>& A) {
            int n = A.size();
            vector<int> res(n);
            // C[i] = A[0] * A[1] * ... *A[i - 1]
            for (int i = 0, temp = 1; i < n; i++) {
                res[i] = temp;
                temp *= A[i];
            }
    
            // D[i] = A[i + 1] * A[i + 2] * ... *A[n - 1]
            for (int i = n - 1, temp = 1; i >= 0; i--) {
                res[i] *= temp;
                temp *= A[i];
            }
            return res;
        }
    };
    
    int main() {
        int ls[] = { 6, 5, 3 ,2};
        vector<int> v = vector<int>(ls, ls + 4);
        Solution solu;
        vector<int> res = solu.multiply(v);
        for each (int var in res) {
            cout << var<<"  " ;
        }
        cout << endl;
        return 0;
    }


输出：

    
    30  36  60  90


**利害的，充分利用计算过的值。**

















* * *





# COMMENT



