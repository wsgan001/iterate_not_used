---
author: evo
comments: true
date: 2018-05-29 08:39:44+00:00
layout: post
link: http://106.15.37.116/2018/05/29/%e7%ae%97%e6%b3%95%ef%bc%9a%e8%a1%a8%e7%a4%ba%e6%95%b0%e5%80%bc%e7%9a%84%e5%ad%97%e7%ac%a6%e4%b8%b2/
slug: '%e7%ae%97%e6%b3%95%ef%bc%9a%e8%a1%a8%e7%a4%ba%e6%95%b0%e5%80%bc%e7%9a%84%e5%ad%97%e7%ac%a6%e4%b8%b2'
title: 算法：表示数值的字符串
wordpress_id: 6992
categories:
- 基础程序设计
tags:
- ordinary algorithm
---

<!-- more -->

[mathjax]

**注：非原创，所有版权属于原作者，原文已列在 ORIGINAL 中。为了方便个人学习做了整合、修改，仅供个人学习使用。**


# ORIGINAL





 	
  1. 


[CodingInterviews](https://github.com/gatieme/CodingInterviews)







# TODO





 	
  * aaa





* * *





# INTRODUCTION





 	
  * aaa





# 题目




## 题目描述


请实现一个函数用来判断字符串是否表示数值（包括整数和小数）。

例如， 字符串 "+100"，"5e2"，"-123"，"3.1416" 和 "-1E-16" 都表示数值。

但是 "12e"，"1a3.14"，"1.2.3"，"+-5" 和 "12e+4.3" 都不是。


## 




# 题目解答




## 从前到后依次判断即可


判断一个字符串是否符合上述模式时：



 	
  * 首先看第一个字符是不是正负号。

 	
  * 如果是，在字符串上移动一个字符，继续扫描剩余的字符串中0到9的数位。

 	
  * 如果是一个小数，则将遇到小数点。

 	
  * 另外，如果是用科学计数法表示的数值，在整数或者小数的后面还有可能遇到 ’e’ 或者 ’E’ 。


[](https://github.com/gatieme/CodingInterviews/tree/master/054-%E8%A1%A8%E7%A4%BA%E6%95%B0%E5%80%BC%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2#%E4%BB%A3%E7%A0%81)代码如下：

    
    #include <iostream>
    using namespace std;
    
    
    class Solution {
    public:
        bool isNumeric(char* str) {
            if (str == NULL) {
                return false;
            }
            //  可能遇见符号+/-
            if (*str == '+' || *str == '-') {
                ++str;
            }
            if (*str == '\0') {
                return false;
            }
    
            bool numberic = true;
    
            //  处理可能遇见的数字
            ScanDigits(&str);
    
            if (*str != '\0') {
                if (*str == '.') {
                    ++str;
                    ScanDigits(&str);
                    if (*str == 'e' || *str == 'E') {
                        numberic = IsExponential(&str);
                    }
                }
                else if (*str == 'e' || *str == 'E') {
                    numberic = IsExponential(&str);
                }
                else {
                    numberic = false;
                }
            }
            return numberic && *str == '\0';
        }
    
        bool IsExponential(char **str) {
            if (**str != 'e' && **str != 'E') {
                return false;
            }
            ++(*str);
            if (**str == '+' || **str == '-') {
                ++(*str);
            }
            if (**str == '\0') {
                return false;
            }
            ScanDigits(str);
            return (**str == '\0') ? true : false;
        }
    
        //为什么要指针的指针呢？是为了修改 *str 这个指针。
        void ScanDigits(char **str) {
            while (**str != '\0' && (**str >= '0' && **str <= '9')) {
                ++(*str);
            }
        }
    
    
    };
    
    
    int main() {
        Solution solu;
        cout << solu.isNumeric("1e-23") << endl;
        return 0;
    }


输出：

    
    1


**还是很清晰的，很好呀。**















* * *





# COMMENT



